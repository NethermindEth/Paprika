name: "Paprika Tests"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
  push:
    branches: [main]
  workflow_dispatch:

env:
  BUILD_CONFIG: release
  DOTNET_VERSION: 9

jobs:
  tests:
    timeout-minutes: 20
    name: "Run Paprika tests"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write # for sticky-pull-request-comment
    steps:
      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Check out repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Test
        run: dotnet test src/Paprika.Tests -c ${{ env.BUILD_CONFIG }} --filter TestCategory\!~LongRunning --collect:"XPlat Code Coverage" --results-directory ./coverage

      - name: Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: coverage/**/coverage.cobertura.xml
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: "75 85"

      - name: Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          header: Code Coverage
          recreate: true
          path: code-coverage-results.md

  os-tests:
    timeout-minutes: 5
    name: "OS dependent tests"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    permissions:
      contents: read

    steps:
      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Check out repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Test (OS Category Only)
        run: dotnet test src/Paprika.OS.Tests -c ${{ env.BUILD_CONFIG }}